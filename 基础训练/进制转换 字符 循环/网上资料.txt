问题描述
给定n个十六进制正整数，输出它们对应的八进制数。

输入格式
输入的第一行为一个正整数n （1<=n<=10）。 
接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。

输出格式
输出n行，每行为输入对应的八进制正整数。

注意
输入的十六进制数不会有前导0，比如012A。 
输出的八进制数也不能有前导0。

样例输入
2 
39 
123ABC
样例输出
71 
4435274
提示
先将十六进制数转换成某进制数，再由某进制数转换成八进制。 
刚开始，犯得老毛病，就是先转换成了十进制，忘了题目中有一句话，每个十六进制数长度不超过100000，十万啊，大数问题了，用字符串吧。 
这是错误的，我转换十进制再转换八进制的代码： 
 // 十六进制转八进制,WA
#include <iostream>
#include <string>
#include <cmath>
using namespace std;
int arr[10000001]; // 记录八进制的数

int main()
{
  string str;
  int n,m,i,num,j;
  
  cin>>n;
  while(n--)
  {
    cin>>str;
    m=str.length();
    // 转换成十进制
    num=0;
    for(i=m-1;i>=0;--i)
    {
      if(str[i]>='0'&&str[i]<='9')
        num+=pow(16,m-1-i)*(str[i]-'0');
      else if(str[i]>='A'&&str[i]<='F')
        num+=pow(16,m-1-i)*(str[i]-'A'+10);
    }
    
    i=0;
    while(num/8!=0)
    {
      arr[i]=num%8;
      num/=8;
      ++i;
    }
    arr[i]=num;

    for(j=i;j>=0;--j)
      cout<<arr[j];
    cout<<endl;

  }
  return 0;
}
这个是正确的，先转换二进制再转换八进制： 
// 修正位数，那里，因为转换成八进制，要将二进制三个一组分组，如果不能被三整除，会出错，所以 
要修正位数，往前面填0，填0后要防止转换八进制后第一个为0，输出时判断一下。 
// 十六进制转换8进制 AC

#include <iostream>
#include <string>
using namespace std;
int arr[10000001];

int main()
{
  int n,len_str,i,j;
  string str,str2;
  cin>>n;
  while(n--)
  {
    cin>>str;
    len_str=str.length();
    str2="";

    // 十六进制转换为二进制
    for(i=0;i<len_str;++i)
    {
      switch(str[i])
      {
      case '0':str2+="0000";break;
      case '1':str2+="0001";break;
      case '2':str2+="0010";break;
      case '3':str2+="0011";break;
      case '4':str2+="0100";break;
      case '5':str2+="0101";break;
      case '6':str2+="0110";break;
      case '7':str2+="0111";break;
      case '8':str2+="1000";break;
      case '9':str2+="1001";break;
      case 'A':str2+="1010";break;
      case 'B':str2+="1011";break;
      case 'C':str2+="1100";break;
      case 'D':str2+="1101";break;
      case 'E':str2+="1110";break;
      case 'F':str2+="1111";break;
      default:break;
      }
    }
    
    // 修正位数
    if(len_str%3==1)	str2="00"+str2;
    
    else if(len_str%3==2)	str2="0"+str2;

    
    len_str=str2.length();
    // 二进制转换八进制
    j=0;
    for(i=0;i<=len_str-2;i+=3)
    {
      arr[j]=(str2[i]-'0')*4+(str2[i+1]-'0')*2+(str2[i+2]-'0');
      ++j;
    }

    for(i=0;i<j;++i)
    {
      if(arr[i]==0)	continue;     //判断前面不能为0
      cout<<arr[i];
    }
    cout<<endl;

  }
  return 0;
}